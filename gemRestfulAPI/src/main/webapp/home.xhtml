<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:p="http://primefaces.org/ui">
    <f:view contentType="text/html"/>
    <h:head>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/chartjs-adapter-moment/1.0.1/chartjs-adapter-moment.min.js" integrity="sha512-hVy4KxCKgnXi2ok7rlnlPma4JHXI1VPQeempoaclV1GwRHrDeaiuS1pI6DVldaj5oh6Opy2XJ2CTljQLPkaMrQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
        <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>
        <title>GEM - Home</title>
        <link rel="icon" href="logo1.png"></link>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" charset="utf-8"/>
        <link rel="stylesheet" type="text/css" href="home.css"/>
    </h:head>
    <div id="background"></div>
    <h:outputScript>
      function chartExtender() {
      //Copie la config des options dans une var
      var options = $.extend(true, {}, this.cfg.config);

      options = {
        data: {
          tension: 0.1,
        },
        options: {
          elements: {
            point: {
              radius: 0,
            },
          },
          scales: {
            x: {
              type: 'time',
              time: {
                unit: 'hour',
                displayFormats: {
                  hour: 'HH:mm',
                },
              },
            },
          },
        },
      };

      //merge all options into the main chart options
      $.extend(true, this.cfg.config, options);
    }

    function percentageLabels() {
      var options = {
        plugins: [ChartDataLabels],
        options: {
          plugins: {
            // Change options for ALL labels of THIS CHART
            datalabels: {
              formatter: (value, ctx) => {
                let sum = 0;
                let dataArr = ctx.chart.data.datasets[0].data;
                dataArr.map((data) => {
                  sum += data;
                });
                let percentage = ((value * 100) / sum).toFixed(2) + '%';
                return percentage;
              },
            },
          },
        },
      };

      //merge all options into the main chart options
      $.extend(true, this.cfg.config, options);
    }


    </h:outputScript>
    <header>
        <div style="display: flex;">
            <div>
                <h:graphicImage url="#{'logotext1.png'}"/>
            </div>
            <div style="display: flex; align-items: center;"> 
                <div style="display: flex">                  
                 <h:outputLabel value="VMC " style="margin-top: 9px;margin-left: 10vw;"/>
                    <p:selectOneButton style="margin-top: -1px;margin-left: 2vw" value="#{vmcBean.statut}">
                        <f:selectItem itemLabel="OFF" itemValue="1"/>
                        <f:selectItem itemLabel="SLOW" itemValue="2"/>
                        <f:selectItem itemLabel="FAST" itemValue="3"/>
                    </p:selectOneButton>
                </div>
                <br></br>
                <div>
                    <p:button value="Facture" styleClass="severities-button ui-button-success" style="margin-left: 10vw;"/>&nbsp;&nbsp;
                </div> 
            </div>
        </div>
    </header>
    <h:body>
        <div class="content">
            <div>
                <div class="selection-form">
                    <div>
                        <h:outputLabel value="Pick date"/>
                        <br></br>
                        <p:datePicker id="date" style="margin-top: 3px" value="#{suiviBean.date}" onchange="#{ChartView.createBarModel()}"></p:datePicker>
                    </div>
                    <div>
                        <h:outputLabel value="Choose graph"/>
                        <br></br>
                        <p:selectOneButton style="margin-top: 3px" value="#{capteurHumiditeBean.mesure}">
                            <f:selectItem itemLabel="Conso" itemValue="0"/>
                            <f:selectItem itemLabel="Charge" itemValue="0"/>
                        </p:selectOneButton>
                    </div>
                </div>
                <p:barChart model="#{ChartView.barModel}"/>
            </div>
        </div>
    </h:body>
</html>
