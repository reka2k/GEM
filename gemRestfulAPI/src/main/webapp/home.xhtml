<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:p="http://primefaces.org/ui">
    <f:view contentType="text/html"/>
    <h:head>
        <title>Gestion Electrique</title>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/chartjs-adapter-moment/1.0.1/chartjs-adapter-moment.min.js" integrity="sha512-hVy4KxCKgnXi2ok7rlnlPma4JHXI1VPQeempoaclV1GwRHrDeaiuS1pI6DVldaj5oh6Opy2XJ2CTljQLPkaMrQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
        <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>
    </h:head>
    <h:outputScript>
      function chartExtender() {
      //Copie la config des options dans une var
      var options = $.extend(true, {}, this.cfg.config);

      options = {
        data: {
          tension: 0.1,
        },
        options: {
          elements: {
            point: {
              radius: 0,
            },
          },
          scales: {
            x: {
              type: 'time',
              time: {
                unit: 'hour',
                displayFormats: {
                  hour: 'HH:mm',
                },
              },
            },
          },
        },
      };

      //merge all options into the main chart options
      $.extend(true, this.cfg.config, options);
    }

    function percentageLabels() {
      var options = {
        plugins: [ChartDataLabels],
        options: {
          plugins: {
            // Change options for ALL labels of THIS CHART
            datalabels: {
              formatter: (value, ctx) => {
                let sum = 0;
                let dataArr = ctx.chart.data.datasets[0].data;
                dataArr.map((data) => {
                  sum += data;
                });
                let percentage = ((value * 100) / sum).toFixed(2) + '%';
                return percentage;
              },
            },
          },
        },
      };

      //merge all options into the main chart options
      $.extend(true, this.cfg.config, options);
    }


    </h:outputScript>
    <h:body>
        <h:form >
            <p:growl id="msg"/>
            <div style="display: flex; justify-content: center; max-height: 10vh;">
                <h:graphicImage id="waveImg" url="#{resource['4.png']}" style='overflow: visible; height: 150px'/>

                <h:outputLabel for="date" value="Date: " style="font-size: x-large; margin: auto;" /> &nbsp;

                <p:datePicker id="date" value="#{ChartView.date}" onchange="#{ChartView.afficherGraph()}" style="margin: auto;">
                    <p:ajax event="dateSelect" update="graph" listener="#{ChartView.afficherGraph()}"/>
                </p:datePicker> &nbsp;&nbsp;
            </div>

            <br/><br/>
            <div style="display: flex;">
                <div>
                    <p:lineChart id="graph" model="#{ChartView.linemodel}" rendered="true" style="width: 100%; height: 70vh;"/>
                </div>

            </div>

        </h:form>
    </h:body>
</html>
